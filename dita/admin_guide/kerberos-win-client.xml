<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
  <title>为Windows客户端进行Kerberos配置</title>
  <shortdesc>您可以配置微软的Windows客户端应用程序来连接一个已配置Kerberos认证的Greenplum数据库系统。</shortdesc>
  <body>
    <ul id="ul_pbc_mxz_pw">
      <li><xref href="#topic_vjg_d5m_sv" format="dita"/></li>
      <li><xref href="#topic_uzb_t5m_sv" format="dita"/></li>
    </ul>
    <p>有关在Greenplum数据库中启用Kerberos认证的信息，参阅<xref
        href="kerberos.xml#topic1"/>。</p>
  </body>
  <topic id="topic_vjg_d5m_sv">
    <title>在Windows上为Greenplum数据库客户端配置Kerberos</title>
    <body>
		<p>当一个Greenplum数据库系统被配置为启用Kerberos作认证后，您可以为微软Windows系统上的Greenplum数据库客户端工具<codeph>gpload</codeph>和<codeph>psql</codeph>配置Kerberos认证。
        Greenplum数据库直接使用Kerberos认证，而不使用微软的活动目录（AD）。</p>
      <p>本节包含以下信息。</p>
      <p>
        <ul id="ul_ask_2r1_cw">
          <li><xref href="#topic_vjg_d5m_sv/win_kerberos_install" format="dita"/>.</li>
          <li><xref href="#topic_vjg_d5m_sv/win_psql_kerb" format="dita"/></li>
          <li><xref href="#topic_vjg_d5m_sv/win_gpload_kerb" format="dita"/></li>
          <li><xref href="#topic_vjg_d5m_sv/win_keytab" format="dita"/></li>
          <li><xref href="#topic_vjg_d5m_sv/win_kerberos_issues" format="dita"/></li>
        </ul>
      </p>
      <p>这些主题假设Greenplum数据库系统已经被配置为启用Kerberos和微软的活动目录认证。参阅<xref href="#topic_uzb_t5m_sv" format="dita" />。</p>
      <section id="win_kerberos_install">
        <title>在Windows系统上安装Kerberos</title>
        <p>要对Windows系统上的Greenplum数据库客户端使用Kerberos认证，该系统上必须安装MIT Kerberos Windows客户端。
        可以从<xref
            href="http://web.mit.edu/kerberos/dist/index.html" format="html" scope="external"
            >http://web.mit.edu/kerberos/dist/index.html</xref>下载安装MIT Kerberos for Windows 4.0.1 (for krb5)。</p>
        <p>在Windows系统上，可以使用Kerberos的<codeph>kinit</codeph>工具管理Kerberos的票据。</p>
        <p>Kerberos服务没有被设置为自启动。该服务不能被用来认证Greenplum数据库。</p>
        <p>从Greenplum数据库master主机拷贝<codeph>/etc/krb5.conf</codeph>，并放置到Windows系统Kerberos默认路径<codeph>C:\ProgramData\MIT\Kerberos5\krb5.ini</codeph>。
        在文件的<codeph>[libdefaults]</codeph>部分，移除Kerberos的票据缓冲的位置<codeph>default_ccache_name</codeph>。</p>
        <p>在Windows系统上，使用环境变量<codeph>KRB5CCNAME</codeph>指定Kerberos票据的位置。环境变量的值是一个文件而不是目录，并且它应该对服务器上的每个登录都是唯一的。</p>
        <p>如下示例是配置文件，其中<codeph>default_ccache_name</codeph>被移除，
        <codeph>[logging]</codeph>部分也被移除。</p>
        <codeblock>[libdefaults]
 debug = true
 default_etypes = aes256-cts-hmac-sha1-96
 default_realm = EXAMPLE.LOCAL
 dns_lookup_realm = false
 dns_lookup_kdc = false
 ticket_lifetime = 24h
 renew_lifetime = 7d
 forwardable = true

[realms]
 EXAMPLE.LOCAL = {
  kdc =bocdc.example.local
  admin_server = bocdc.example.local
 }

[domain_realm]
 .example.local = EXAMPLE.LOCAL
 example.local = EXAMPLE.LOCAL</codeblock>
        <p>使用<codeph>KRB5CCNAME</codeph>指定Kerberos票据时，
        可以在一个本地用户环境或者一个会话中指定该值。
        如下命令设置<codeph>KRB5CCNAME</codeph>，然后运行<codeph>kinit</codeph>，
        并且运行批处理文件来为Greenplum数据库的客户端设置环境变量。</p>
        <codeblock>set KRB5CCNAME=%USERPROFILE%\krb5cache
kinit

"c:\Program Files (x86)\Greenplum\greenplum-clients-&lt;version>\greenplum_clients_path.bat"</codeblock>
      </section>
      <section id="win_psql_kerb">
        <title>运行psql工具</title>
        <p>在Windows系统上安装并且配置Kerberos及其票据之后，
          可以运行Greenplum数据库的命令行客户端<codeph>psql</codeph>。</p>
        <p>如果得到警告指出控制台代码页与Windows代码页不同，
          可以运行Windows工具<codeph>chcp</codeph>来改变代码页。
          如下示例展示了该警告及修正方法。</p>
        <codeblock>psql -h prod1.example.local warehouse
psql (9.4.20)
WARNING: Console code page (850) differs from Windows code page (1252)
 8-bit characters might not work correctly. See psql reference
 page "Notes for Windows users" for details.
Type "help" for help.

warehouse=# \q

chcp 1252
Active code page: 1252

psql -h prod1.example.local warehouse
psql (9.4.20)
Type "help" for help.</codeblock>
      </section>
      <section id="win_keytab">
        <title>创建一个Kerberos的密钥表文件</title>
        <p>在连接到Greenplum数据库系统时，可以创建并使用一个Kerberos的<codeph>keytab</codeph>文件来避免在命令行输入密码或者在脚本文件中列出密码。
        可以用这些工具创建密钥表文件：<ul
            id="ul_q5z_js4_cw">
            <li>Windows Kerberos工具<codeph>ktpass</codeph></li>
            <li>Java JRE密钥表工具<codeph>ktab</codeph><p>如果使用AES256-CTS-HMAC-SHA1-96加密，
            需要从Oracle下载并安装Java扩展<cite>Java
                  Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files for
                  JDK/JRE</cite>。该命令创建密钥表文件
                  <codeph>svcPostgresProd1.keytab</codeph>。</p></li>
          </ul></p>
        <p>作为一个AD域管理员运行<codeph>ktpass</codeph>工具。
        该工具需要一个包含服务主体名称（SPN）的用户账户作为AD用户属性的，该参数不是必需的。
        可以设置它作为<codeph>ktpass</codeph>的一个参数并忽略未设置的警告。</p>
        <p>Java JRE的<codeph>ktab</codeph>工具需要AD域名管理员，不需要SPN。</p>
        <note>输入密码以创建密钥表文件时，屏幕上会显示密码。</note>
        <p>该示例运行<codeph>ktpass</codeph>工具创建密钥表
            <codeph>dev1.keytab</codeph>。</p>
        <codeblock>ktpass -out dev1.keytab -princ dev1@EXAMPLE.LOCAL -mapUser dev1 -pass <varname>your_password</varname> -crypto all -ptype KRB5_NT_PRINCIPAL</codeblock>
        <p>尽管有警告信息<codeph>Unable to set SPN mapping data</codeph>仍然可用。</p>
        <p>该示例运行Java<codeph>ktab.exe</codeph>创建密钥表文件（<codeph>-a</codeph>选项）并列出密钥表名称和条目（<codeph>-l</codeph>
          <codeph>-e</codeph>
          <codeph>-t</codeph>选项）。</p>
        <codeblock>C:\Users\dev1>"\Program Files\Java\jre1.8.0_77\bin"\ktab -a dev1
Password for dev1@EXAMPLE.LOCAL:<varname>your_password</varname>
Done!
Service key for dev1 is saved in C:\Users\dev1\krb5.keytab

C:\Users\dev1>"\Program Files\Java\jre1.8.0_77\bin"\ktab -l -e -t
Keytab name: C:\Users\dev1\krb5.keytab
KVNO Timestamp Principal
---- -------------- ------------------------------------------------------
 4 13/04/16 19:14 dev1@EXAMPLE.LOCAL (18:AES256 CTS mode with HMAC SHA1-96)
 4 13/04/16 19:14 dev1@EXAMPLE.LOCAL (17:AES128 CTS mode with HMAC SHA1-96)
 4 13/04/16 19:14 dev1@EXAMPLE.LOCAL (16:DES3 CBC mode with SHA1-KD)
 4 13/04/16 19:14 dev1@EXAMPLE.LOCAL (23:RC4 with HMAC)</codeblock>
        <p>然后，您可以使用该密钥表：</p>
        <codeblock>kinit -kt dev1.keytab dev1
or
kinit -kt %USERPROFILE%\krb5.keytab dev1</codeblock>
      </section>
      <section id="win_gpload_kerb">
        <title>gpload示例YAML文件</title>
        <p>该示例以<codeph>dev1</codeph>用户身份，运行<codeph>gpload</codeph>任务，用户通过AD域登录到Windows桌面。</p>
        <p>示例中的<codeph>test.yaml</codeph>控制文件，其<codeph>USER:</codeph>行已经被移除。使用了Kerberos认证</p>
        <codeblock>---
VERSION: 1.0.0.1
DATABASE: warehouse
HOST: prod1.example.local
PORT: 5432

GPLOAD:
   INPUT:
    - SOURCE:
         PORT_RANGE: [18080,18080]
         FILE:
           - /Users/dev1/Downloads/test.csv
    - FORMAT: text
    - DELIMITER: ','
    - QUOTE: '"'
    - ERROR_LIMIT: 25
    - LOG_ERRORS: true
   OUTPUT:
    - TABLE: public.test
    - MODE: INSERT
   PRELOAD:
    - REUSE_TABLES: true</codeblock>
        <p>如下命令运行<codeph>kinit</codeph>，然后用<codeph>test.yaml</codeph>文件运行<codeph>gpload</codeph>，并成功显示<codeph>gpload</codeph>输出信息。</p>
        <codeblock>kinit -kt %USERPROFILE%\krb5.keytab dev1

gpload.py -f test.yaml
2016-04-10 16:54:12|INFO|gpload session started 2016-04-10 16:54:12
2016-04-10 16:54:12|INFO|started gpfdist -p 18080 -P 18080 -f "/Users/dev1/Downloads/test.csv" -t 30
2016-04-10 16:54:13|INFO|running time: 0.23 seconds
2016-04-10 16:54:13|INFO|rows Inserted = 3
2016-04-10 16:54:13|INFO|rows Updated = 0
2016-04-10 16:54:13|INFO|data formatting errors = 0
2016-04-10 16:54:13|INFO|gpload succeeded</codeblock>
      </section>
      <section id="win_kerberos_issues">
        <title>问题及可能的解决方案</title>
        <ul id="ul_tkb_hds_wv">
          <li>这个消息表示Kerberos无法找到缓冲文件：
            <codeblock>Credentials cache I/O operation failed XXX
(Kerberos error 193)
krb5_cc_default() failed</codeblock>
            <p>确保Kerberos能找到该文件，设置环境变量
                <codeph>KRB5CCNAME</codeph>然后运行
            <codeph>kinit</codeph>。</p>
            <codeblock>set KRB5CCNAME=%USERPROFILE%\krb5cache
kinit</codeblock></li>
          <li>该<codeph>kinit</codeph>消息表示<codeph>kinit -k -t</codeph>
            命令无法找到密钥表文件。
            <codeblock>kinit: Generic preauthentication failure while getting initial credentials</codeblock><p>确认该Kerberos密钥表文件的完整路径和文件名是正确的。</p></li>
        </ul>
      </section>
    </body>
  </topic>
  <topic id="topic_uzb_t5m_sv">
    <title>使用活动目录配置客户端身份认证</title>
    <body>
      <p>可以使用微软活动目录（AD）帐户配置微软Windows用户，以便单点登录Greenplum数据库系统。</p>
      <p>配置AD用户帐户以支持使用Kerberos身份认证登录。</p>
      <p>通过AD单点登录，Windows用户可以将活动目录凭据与Windows客户端应用程序一起使用，以登录Greenplum数据库系统。 
        针对使用ODBC的Windows应用程序，ODBC驱动程序可以使用活动目录凭据连接到Greenplum数据库系统。</p>
      <note>Windows上运行的Greenplum数据库客户端，如<codeph>gpload</codeph>，接与Greenplum数据库连接，不要使用微软活动目录。有关将Windows上的Greenplum数据库客户端连接到启用Kerberos身份认证的Greenplum数据库系统的信息，请参阅<xref href="#topic_vjg_d5m_sv" format="dita"/>。</note>
      <p>本章节包含以下信息。<ul id="ul_o1g_1qs_bz">
          <li><xref href="#topic_uzb_t5m_sv/ad_prereq" format="dita"/></li>
          <li><xref href="#topic_uzb_t5m_sv/ad_setup" format="dita"/></li>
          <li><xref href="#topic_uzb_t5m_sv/gpdb_ad_setup" format="dita"/></li>
          <li><xref href="#topic_uzb_t5m_sv/ad_sso_examples" format="dita"/></li>
          <li><xref href="#topic_uzb_t5m_sv/ad_problems" format="dita"/></li>
        </ul></p>
      <section id="ad_prereq">
        <title>先决条件</title>
        <p>这些项需要启用AD单点登录到Greenplum数据库系统。</p>
        <ul id="ul_v2b_5n2_pw">
          <li>必须将Greenplum数据库系统配置为支持Kerberos身份认证。
            有关使用Kerberos身份认证配置Greenplum数据库的信息，请参阅 
              <xref href="#topic1" format="dita"/>。</li>
          <li>必须知道Greenplum数据库master主机的完全限定域名（FQDN）。
          同时，Greenplum数据库master主机名必须具有域部分。如果系统没有域，则必须将系统配置为使用域。<p>
          该Linux的<codeph>hostname</codeph>命令显示FQDN信息。</p><codeblock>hostname --fqdn</codeblock></li>
          <li>必须确认Greenplum数据库系统与活动目录域具有相同的日期和时间。
           例如，您可以将Greenplum Database系统NTP时间源设置为AD域控制器，或配置master主机和AD域控制器使用相同的外部时间源。</li>
          <li>要支持单点登录，需要将一个AD作为AD的托管服务账号。如下是对于Kerberos认证的要求。<ul id="ul_yw3_4nx_tv">
              <li>需要添加增加服务主体名称（SPN）属性到用户账户信息中，因为Kerberos工具在Kerberos认证时需要这些信息。</li>
              <li>此外，由于Greenplum数据库需要无人值守启动，必须在一个Kerberos密钥表文件中提供账号登录细节。</li>
            </ul><note>设置SPN和创建密钥表所需的AD管理权限。</note></li>
        </ul>
      </section>
      <section id="ad_setup">
        <title>设置活动目录</title>
        <p>AD命名约定应支持多个Greenplum数据库系统。在此示例中，为Greenplum数据库系统master主机<codeph>prod1</codeph>创建了一个新的AD托管服务帐户<codeph>svcPostresProd1</codeph>。</p>
        <p>其活动目录的域为<codeph>example.local</codeph>。</p>
        <p>Greenplum数据库master主机的完全限定域名是<codeph>prod1.example.local</codeph>。</p>
        <p>添加SPN为<codeph>postgres/prod1.example.local</codeph>到这个帐户。
          其他Greenplum数据库系统的服务帐户都是<codeph>postgres/<varname>fully.qualified.hostname</varname></codeph>的形式。</p>
        <p>
          <image href="graphics/kerb-ms-ad-new-object.png" placement="break" width="412px"
            height="280px" id="image_bxp_2fx_tv"/>
        </p>
        <p>在此示例中，AD的密码被设置为永不过期并且用户不能修改。只有在创建Kerberos密钥表文件时才需要AD账户的密码。不需要把它提供给数据库管理员。</p>
        <p>
          <image href="graphics/kerb-ms-ad-new-object-2.png" placement="break" width="477px"
            height="329px" id="image_x3d_gfx_tv"/>
        </p>
        <p>AD管理员必须用Windows的<codeph>setspn</codeph>命令行，把服务主体名称属性添加到到账户中。该命令示例为AD用户<codeph>svcPostgresProd1</codeph>添加SPN属性<codeph>postgres/prod1.example.local</codeph>：</p>
        <codeblock>setspn -A postgres/prod1.example.local svcPostgresProd1</codeblock>
        <p>如果设置了高级特性，可以在活动目录用户和计算机视图中，看到该SPN属性。
        如果有必要，可以在属性编辑器标签页找到并编辑<codeph>servicePrincipalName</codeph>。</p>
        <p>
          <image href="graphics/kerb-ms-ad-attribute-editor.png" placement="break" width="447px"
            height="398px" id="image_pbt_hfx_tv"/>
        </p>
        <p>下一步是创建Kerberos密钥表文件。</p>
        <p>如果有安全性需要，可以选择特定的加密方法，
          如果没有，最好先使其工作，然后删除您不需要的任何加密方法。</p>
        <p>作为AD域管理员，您可以使用<codeph>ktpass</codeph>命令列出AD域控制器支持的加密类型：</p>
        <codeblock>ktpass /? </codeblock>
        <p>作为AD域管理员，可以运行<codeph>ktpass</codeph>命令创建一个密钥表文件。该示例命令创建包含如下信息的文件<codeph>svcPostgresProd1.keytab</codeph>：<sl>
            <sli>服务主体名称（SPN）：
                <codeph>postgres/prod1.example.local@EXAMPLE.LOCAL</codeph></sli>
            <sli>AD用户：<codeph>svcPostgresProd1</codeph></sli>
            <sli>加密方法： <codeph>ALL available on AD</codeph></sli>
            <sli>主体类型：<codeph>KRB5_NT_PRINCIPAL</codeph></sli>
          </sl></p>
        <codeblock>ktpass -out svcPostgresProd1.keytab -princ postgres/prod1.example.local@EXAMPLE.LOCAL -mapUser svcPostgresProd1
   -pass <varname>your_password</varname> -crypto all -ptype KRB5_NT_PRINCIPAL</codeblock>
        <note>AD域名<codeph>@EXAMPLE.LOCAL</codeph>被附加到SPN。</note>
        <p>拷贝密钥表文件<codeph>svcPostgresProd1.keytab</codeph>到Greenplum数据库master主机。</p>
        <p>作为AD域管理员运行<codeph>ktpass</codeph>的替代方案，如果桌面具有Java环境可以运行Java的<codeph>ktab.exe</codeph>
        工具生成一个密钥表文件。不管使用<codeph>ktpass</codeph>或者<codeph>ktab.exe</codeph>，密码作为命令行参数，在屏幕上是可见的。</p>
        <p>该命令示例创建一个密钥表文件
            <codeph>svcPostgresProd1.keytab</codeph>。
            <codeblock>"c:\Program Files\Java\jre1.8.0_77\bin\ktab.exe" -a svcPostgresprod1 -k svcPostgresProd1.keytab
Password for svcPostgresprod1@EXAMPLE.LOCAL:<varname>your_password</varname>
Done!
Service key for svcPostgresprod1 is saved in svcPostgresProd1.keytab</codeblock>
            <note>如果使用AES256-CTS-HMAC-SHA1-96加密，
            需要从Oracle下载并安装Java扩展<cite>Java
                  Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files for
                  JDK/JRE</cite>。</note></p>
      </section>
      <section id="gpdb_ad_setup">
        <title>为活动目录设置Greenplum数据库</title>
        <p>如下说明假定Kerberos工作站工具<codeph>krb5-workstation</codeph>已经安装在Greenplum数据库master主机上。</p>
        <p>使用AD域名详细信息和AD域控制器的位置，更新<codeph>/etc/krb5.conf</codeph>。如下是一个示例配置。</p>
        <codeblock>[logging]
 default = FILE:/var/log/krb5libs.log
 kdc = FILE:/var/log/krb5kdc.log
 admin_server = FILE:/var/log/kadmind.log

[libdefaults]
 default_realm = EXAMPLE.LOCAL
 dns_lookup_realm = false
 dns_lookup_kdc = false
 ticket_lifetime = 24h
 renew_lifetime = 7d
 forwardable = true

[realms]
 EXAMPLE.LOCAL = {
 kdc = bocdc.example.local
 admin_server = bocdc.example.local
 }

[domain_realm]
 .example.local = EXAMPLE.LOCAL
 example.com = EXAMPLE.LOCAL</codeblock>
        <p>拷贝包含AD用户信息的Kerberos密钥表文件到Greenplum数据库master目录。该示例中复制了在
            <xref href="#topic_uzb_t5m_sv/ad_setup" format="dita">设置活动目录</xref>中创建的<codeph>svcPostgresProd1.keytab</codeph>。</p>
        <codeblock>mv svcPostgresProd1.keytab $MASTER_DATA_DIRECTORY
chown gpadmin:gpadmin $MASTER_DATA_DIRECTORY/svcPostgresProd1.keytab
chmod 600 $MASTER_DATA_DIRECTORY/svcPostgresProd1.keytab</codeblock>
        <p>在Greenplum数据库<codeph>pg_hba.conf</codeph>最后一行添加如下配置。该内容配置Greenplum数据库使用活动目录授权之前行不匹配的连接请求。</p>
        <codeblock>host all all 0.0.0.0/0 gss include_realm=0</codeblock>
        <p>更新Greenplum数据库<codeph>postgresql.conf</codeph>文件中密钥表文件的位置详细信息要使用的主体名称。
        完全限定名称和<codeph>/etc/krb5.conf</codeph>中的域名称，构成了完整的服务主体名称。</p>
        <codeblock>krb_server_keyfile = '/data/master/gpseg-1/svcPostgresProd1.keytab'
krb_srvname = 'postgres'</codeblock>
        <p>为AD用户创建数据库角色。该示例登录到默认数据库并运行<codeph>CREATE ROLE</codeph>命令。
        用户<codeph>dev1</codeph>是<xref href="#topic_uzb_t5m_sv/ad_setup"
            format="dita">设置活动目录</xref>创建密钥表文件的指定用户。</p>
        <codeblock>psql
create role dev1 with login superuser;</codeblock>
        <p>重启数据库以使用最新的身份认证信息：</p>
        <codeblock>gpstop -a
gpstart  </codeblock>
        <note>Greenplum数据库的依赖库可能与Kerberos工作站工具如<codeph>kinit</codeph>冲突。在Greenplum数据库master主机，可以不加载<codeph>$GPHOME/greenplum_path.sh</codeph>脚本使用<codeph>gpadmin</codeph>命令行，或者取消设置<codeph>LD_LIBRARY_PATH</codeph>类似于如下命令：<codeblock>unset LD_LIBRARY_PATH
kinit
source $GPHOME/greenplum_path.sh</codeblock></note>
        <p>确认Greenplum数据库可以通过Kerberos认证访问</p>
        <codeblock>kinit dev1
psql -h prod1.example.local -U dev1</codeblock>
      </section>
      <section id="ad_sso_examples">
        <title>单点登录示例</title>
        <p>如下使用AD和Kerberos的单点登录实例，假设使用单点登录AD用户<codeph>dev1</codeph>登入到Windows桌面。</p>
        <p>该示例为Greenplum数据库配置Aginity Workbench。在使用单点登录时，启用了“使用集成的安全性”。</p>
        <p>
          <image href="graphics/kerb-aginity-config.png" placement="break" width="351px"
            height="330px" id="image_wdq_kfx_tv"/>
        </p>
        <p>该示例配置一个ODBC源。设置该ODBC源时，请不要输入用户名或密码。该DSN可用作应用程序的ODBC数据源。</p>
        <p>
          <image href="graphics/kerb-odbc-config.png" placement="break" width="410px" height="337px"
            id="image_wf2_mfx_tv"/>
        </p>
        <p>可以用R客户端使用DSN为<codeph>testdata</codeph>。该示例配置R以访问DSN。</p>
        <codeblock>library("RODBC")
conn &lt;- odbcDriverConnect("testdata")
sql &lt;- "select * from public.data1"
my_data &lt;- sqlQuery(conn,sql)
print(my_data)</codeblock>
      </section>
      <section id="ad_problems">
        <title>活动目录的问题及可能的解决方案</title>
        <ul id="ul_c4m_y1s_wv">
          <li>Kerberos票据含有的版本号必须匹配AD的版本号。<p>要显示密钥表文件中的版本号，使用<codeph>klist
                -ket</codeph>命令，例如：</p>
                <codeblock>klist -ket svcPostgresProd1.keytab</codeblock>
                <p>要从AD域控制器得到相应的值，可作为一个AD管理员运行这个命令：</p><codeblock>kvno postgres/prod1.example.local@EXAMPLE.LOCAL</codeblock></li>
        </ul>
        <ul id="ul_azk_1bs_wv">
          <li>当Windows ID和Greenplum数据库用户角色ID不匹配时，将会出现如下登录错误。
              该日志文件项显示了登录错误。用户
              <codeph>dev22</codeph>尝试从一个Windows桌面登录，而桌面上登录了一个不同的Windows用户。<codeblock>2016-03-29 14:30:54.041151 PDT,"dev22","gpadmin",p15370,th2040321824,
  "172.28.9.181","49283",2016-03-29 14:30:53 PDT,1917,con32,,seg-1,,,x1917,sx1,
  "FATAL","28000","authentication failed for user ""dev22"": valid 
  until timestamp expired",,,,,,,0,,"auth.c",628,</codeblock>
              <p>当用户能被认证但没有对应Greenplum数据库用户角色时，也会发生这个错误。</p>
              <p>确保该用户是用的是正确的Windows ID并且为该用户ID配置了Greenplum数据库用户角色。
              </p></li>
          <li>
            <p>当Kerberos密钥表不含有与正在尝试连接的客户端相匹配的加密类型时，会发生下面这种错误。
              <codeblock>psql -h 'hostname' postgres
psql: GSSAPI continuation error: Unspecified GSS failure. Minor code may provide more information
GSSAPI continuation error: Key version is not available</codeblock></p>
            <p>解决方案是使用<codeph>ktutil</codeph>增加额外的加密类型到该密钥表，或者用来自AD中所有加密系统重新创建postgres的密钥表。</p>
          </li>
        </ul>
      </section>
    </body>
  </topic>
</topic>
